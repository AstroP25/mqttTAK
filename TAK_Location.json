[
    {
        "id": "368ae4b88017c1b7",
        "type": "tab",
        "label": "TAK MQTT Location",
        "disabled": false,
        "info": "Converts MQTT JSON from Mikrotik device to CoT readable by TAK server.",
        "env": []
    },
    {
        "id": "f0f49ca8952e9215",
        "type": "mqtt in",
        "z": "368ae4b88017c1b7",
        "name": "",
        "topic": "v1/devices/mikrotik/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "fc5b909d5e919829",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 160,
        "wires": [
            [
                "395dea118d69a6b9",
                "384b0a335cceb65a"
            ]
        ]
    },
    {
        "id": "fad14fd54891a228",
        "type": "debug",
        "z": "368ae4b88017c1b7",
        "name": "New JSON Message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 320,
        "wires": []
    },
    {
        "id": "c64a235e829c996f",
        "type": "tak",
        "z": "368ae4b88017c1b7",
        "name": "TAK",
        "x": 610,
        "y": 220,
        "wires": [
            [
                "5f8f2cd3547e689a",
                "70d0c1b320ec5973"
            ],
            [],
            []
        ]
    },
    {
        "id": "5f8f2cd3547e689a",
        "type": "tcp out",
        "z": "368ae4b88017c1b7",
        "name": "",
        "host": "172.29.2.3",
        "port": "8087",
        "beserver": "client",
        "base64": false,
        "end": false,
        "tls": "",
        "x": 820,
        "y": 180,
        "wires": []
    },
    {
        "id": "70d0c1b320ec5973",
        "type": "debug",
        "z": "368ae4b88017c1b7",
        "name": "CoT as XML",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 260,
        "wires": []
    },
    {
        "id": "395dea118d69a6b9",
        "type": "function",
        "z": "368ae4b88017c1b7",
        "name": "Convert to new format for TAK node",
        "func": "var lat=msg.payload.latitude\nvar lon=msg.payload.longitude\nvar id=msg.payload.sn\nvar alt=msg.payload.altitude\nvar callsgn=msg.payload.callsign\n\nconst cinco = 5 * 60 * 1000;\nconst diez = 2 * cinco;\nconst stale = new Date(Date.now() + diez).toISOString();\n\nvar newMsg;\n\nnewMsg = { payload: {\n    \"event\": {\n        \"_attributes\": {\n            \"version\": \"2.0\",\n            \"uid\": id,\n            \"type\": \"a-f-G-U-S-T-A-C\",\n            \"how\": \"m-p\",\n            \"time\": new Date(Date.now()).toISOString(),\n            \"start\": new Date(Date.now()).toISOString(),\n            \"stale\": new Date(Date.now()+500000).toISOString()\n        },\n        \"point\": {\n            \"_attributes\": {\n                \"lat\": lat,\n                \"lon\": lon,\n                \"hae\": alt,\n                \"ce\": \"9999999.0\",\n                \"le\": \"9999999.0\"\n            }\n        },\n        \"detail\": {\n            \"contact\": {\n                \"callsign\": callsgn\n            }\n        }\n    }\n}};\nreturn newMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 240,
        "wires": [
            [
                "c64a235e829c996f",
                "fad14fd54891a228"
            ]
        ]
    },
    {
        "id": "384b0a335cceb65a",
        "type": "debug",
        "z": "368ae4b88017c1b7",
        "name": "JSON from MQTT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 610,
        "y": 120,
        "wires": []
    },
    {
        "id": "c73d127f67db8fd3",
        "type": "inject",
        "z": "368ae4b88017c1b7",
        "name": "Test Trigger",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 90,
        "y": 460,
        "wires": [
            [
                "2d162e2e093f3671"
            ]
        ]
    },
    {
        "id": "2d162e2e093f3671",
        "type": "function",
        "z": "368ae4b88017c1b7",
        "name": "Test Mikrotik Payload",
        "func": "msg = { payload:{\n    \"latitude\":30.7639,\n    \"longitude\":-98.2266,\n    \"altitude\":395,\n    \"callsign\":\"MikrotikTAK Test\",\n    \"sn\":\"867-5309\"}\n    };\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 160,
        "y": 360,
        "wires": [
            [
                "395dea118d69a6b9"
            ]
        ]
    },
    {
        "id": "fc5b909d5e919829",
        "type": "mqtt-broker",
        "name": "",
        "broker": "172.17.0.2",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    }
]